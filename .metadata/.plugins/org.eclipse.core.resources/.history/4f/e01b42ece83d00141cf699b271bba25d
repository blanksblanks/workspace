import java.util.Comparator;

	public static interface Comparator <AnyType> AnyType findMax( AnyType [] arr, Comparator<? super AnyType> cmp){ {
		int maxIndex = 0;
		
		for (int i = 1; i < arr.size(); i++) {
			if (cmp.compare (arr[i], arr[maxIndex]) > 0) {
				maxIndex = 1;
			}
		}
		
		return arr[maxIndex];
	}  
}

public class CompareArea implements Comparator<Rectangle> {
	
	public int compare(Rectangle rect1, Rectangle rect2) {
		return rect1.getArea().compareTo(rect2.getArea());
	}
	
}
		

//	//   // Overriding the compare method to sort the area
//	//   public int compare(Rectangle rect, Rectangle rect1){
////	      return rect.area - rect1.area;
//	//   }
//	   
//
//public class CompareArea implements Comparator<Rectangle> {
//	 public int compare(int a, int b)
//     {
//        // order based on area, ascending
//        Rectangle r1 = (Rectangle) firstObject;
//        double area1 = r1.getWidth() * r1.getHeight();
//        Rectangle r2 = (Rectangle) secondObject;
//        double area2 = r2.getWidth() * r2.getHeight();
//
//        if (area1 < area2)
//        {
//           return -1;
//        }
//        if (area1 > area2)
//        {
//           return 1;
//        }
//        else {
//        	return 0;
//        }
//     }
//  }
