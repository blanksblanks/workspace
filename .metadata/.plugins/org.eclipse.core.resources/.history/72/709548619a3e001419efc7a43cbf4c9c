
// TODO: Implement the code in Java, and give the running time for several values of N.
// TODO: Compare your analysis with the actual running times.

public class Exercise2_7 {
	
	public static void main(String[] args) {
		
		int[] thousands = {1, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000};
		int[] hundreds = {1, 200, 300, 400, 500, 600, 700, 800, 900, 1000};
		
		for (int loop = 0; loop <= 4; loop++) {
			for (int i = 0; i < thousands.length; i++) {
				runTimeFor(loop, thousands[i]);
			}
		
		for (int i = 0; i < thousands.length; i++) {
			runTimeFor(5, hundreds[i]);
		}
		for (int i = 0; i < thousands.length; i++) {
			runTimeFor(6, hundreds[i]);
		}
		
	}
	
	public static void runTimeFor(int sumNum, int someNum) {
		Sum test = new Sum();
		int sum;
		TimeInterval time = new TimeInterval();
		time.startTiming();
		
		switch (sumNum) {
			case 1: 
					sum = test.sumOne(someNum);
					break;
            case 2: 
            		sum = test.sumTwo(someNum);
					break;
            case 3: 
            		sum = test.sumThree(someNum);
					break;
            case 4: 
            		sum = test.sumFour(someNum);
					break;
            case 5: 
            		sum = test.sumFive(someNum);
					break;
            case 6: 
            		sum = test.sumSix(someNum);
            		break;
		
		double runtime = time.getElapsedTime();
		System.out.println("Loop: " + sumNum + " N: " + someNum +
		" Sum:" + sum + " Running time: " + runtime + " ms");

	}
	
}
