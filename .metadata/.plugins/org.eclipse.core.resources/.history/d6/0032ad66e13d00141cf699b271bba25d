
	// Generic findMax, with a function object
	// Precondition: a.size( ) > 0

	public interface Comparator<AnyType>
	AnyType findMax( AnyType [] arr, Comparator<? super AnyType> cmp) {
		int maxIndex = 0;
		
		for (int i = 1; i < arr.size(); i++) {
			if (cmp.compare (arr[i], arr[maxIndex]) > 0) {
				maxIndex = 1;
			}
		}
		
		return arr[maxIndex];
	}
	

public class CompareArea implements Comparator<int> {
	 public int compare(Object firstObject, Object secondObject)
     {
        // order based on area, ascending
        Rectangle r1 = (Rectangle) firstObject;
        double area1 = r1.getWidth() * r1.getHeight();
        Rectangle r2 = (Rectangle) secondObject;
        double area2 = r2.getWidth() * r2.getHeight();

        if (area1 < area2)
        {
           return -1;
        }
        if (area1 > area2)
        {
           return 1;
        }
        else {
        	return 0;
        }
     }
  }

}
